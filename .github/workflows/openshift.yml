name: OpenShift 

env: 
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  APP_NAME: nationalparks
  IMAGE_TAGS: latest ${{ github.sha }}

  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: "anna-bajnok-dev"

  APP_PORT: "8080"
on:
  # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows
  push: 
    branches: [ master ]

jobs:
  build-and-push: 
    name: Build and push to github container registry
    runs-on: ubuntu-22.04
    environment: development

    outputs:
        ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
        SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    steps:
    - name: Checkout
      id: checkout
      uses: actions/checkout@v2

    

    - name: Install Latest Podman from Official Repository
      run: |
        # Remove old Podman (if it exists)
        sudo apt-get remove -y podman

        # Add the official Podman repository
        source /etc/os-release
        echo "deb [signed-by=/usr/share/keyrings/libcontainers-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$VERSION_CODENAME/ /" | sudo tee /etc/apt/sources.list.d/devel_kubic_libcontainers_stable.list > /dev/null
        curl -fsSL https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$VERSION_CODENAME/Release.key | sudo gpg --dearmor -o /usr/share/keyrings/libcontainers-archive-keyring.gpg
        # Update system and install latest Podman
        sudo apt-get update
        sudo apt-get install -y podman
        podman --version

    - name: Debug Host Environment
      run: |
        cat /etc/os-release  # Verify the OS version
        docker --version     # Check Docker version
        podman --version     # Check Podman version
        podman info          # Inspect Podman setup
        curl --unix-socket /var/run/docker.sock http://localhost/version | jq  # Check Docker API version


   # https://github.com/redhat-actions/s2i-build#readme
    - name: S2I Build 
      id: build_image
      uses: redhat-actions/s2i-build@v2
      with:
        path_context: '.'
        builder_image: 'registry.access.redhat.com/ubi8/openjdk-11'
        image: ${{ env.APP_NAME }}
        tags: ${{ env.IMAGE_TAGS }}
        podman: false

    # https://github.com/redhat-actions/push-to-registry#readme
    - name: Push to Registry 
      id: push-to-registry
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build_image.outputs.image }}
        tags: ${{ steps.build_image.outputs.tags }}
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}

    # The path the image was pushed to is now stored in ${{ steps.push-to-registry.outputs.registry-path }}

    # https://github.com/redhat-actions/oc-login#readme
    - name: Log in to OpenShift 
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}

    # Run a script to create a new app or update the current one with the previously pushed container image
    - run: | 
         "${GITHUB_WORKSPACE}/.github/script.sh" ${{ env.APP_NAME }} ${{ env.IMAGE_REGISTRY }}/${{ steps.build_image.outputs.image }}:${{ github.sha }} ${{ env.OPENSHIFT_NAMESPACE }}
